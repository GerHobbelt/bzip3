name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:

  ghrelease:
    name: Publish sources on GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure
        run: |
          ./bootstrap.sh
          ./configure
      - name: Build source packages
        run: |
          make dist
          bzip2 -d -k bzip3-${{ github.ref_name }}.tar.bz2
          zstd -19 bzip3-${{ github.ref_name }}.tar
          7z a bzip3-${{ github.ref_name}}.tar{.7z,}
      - name: Build a binary (for dogfooding)
        run: make
      - name: Create a dogfood package
        run: |
          ./bzip3 -e bzip3-${{ github.ref_name }}.tar
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bzip3-${{ github.ref_name }}.tar
            bzip3-${{ github.ref_name }}.tar.7z
            bzip3-${{ github.ref_name }}.tar.bz2
            bzip3-${{ github.ref_name }}.tar.bz3
            bzip3-${{ github.ref_name }}.tar.gz
            bzip3-${{ github.ref_name }}.tar.xz
            bzip3-${{ github.ref_name }}.tar.zst
            bzip3-${{ github.ref_name }}.zip
      - name: Upload source package artifact
        uses: actions/upload-artifact@v3
        with:
          name: bzip3-${{ github.ref_name }}
          path: bzip3-${{ github.ref_name }}.tar.gz

  binaries:
    name: Publish Binaries on GitHub Release
    needs: [ ghrelease ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - [ "x86_64-linux", "--enable-static-exe --disable-arch-native", "" ]
          - [ "x86_64", "CC=x86_64-w64-mingw32-gcc --host x86_64-w64-mingw32 --enable-static-exe --disable-arch-native", "gcc-mingw-w64-x86-64" ]
          - [ "i686", "CC=i686-w64-mingw32-gcc --host i686-w64-mingw32 --enable-static-exe --disable-arch-native", "gcc-mingw-w64-i686" ]
    steps:
      - name: Download source package artifact
        uses: actions/download-artifact@v3
        with:
          name: bzip3-${{ github.ref_name }}
      - name: Extract source package
        run: tar --strip-components=1 -xf bzip3-${{ github.ref_name }}.tar.gz
      - name: Install cross-compile dependencies
        if: ${{ matrix.target[2] }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.target[2] }}
      - name: Configure
        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}
      - name: Make
        run: |
          make
          make DESTDIR=$(pwd)/output install-exec
      - name: Publish binary
        uses: softprops/action-gh-release@v1
        with:
          files: |
            output/bzip3-${{ matrix.target[0] }}*

  release-cosmo:
    name: Publish bzip3 built with Cosmopolitan Libc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Install cosmocc
        run: |
          sudo apt-get install -y automake autoconf
          sudo mkdir -p /sc
          sudo chmod 0777 -R /sc
          cd /sc
          wget https://github.com/jart/cosmopolitan/releases/download/3.3.3/cosmocc-3.3.3.zip
          mkdir cosmo
          cd cosmo
          unzip ../cosmocc-3.3.3.zip
          sudo cp ./bin/ape-x86_64.elf /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"
      - name: Build APE binary of bzip3
        run: |
          autoreconf -fi
          CC="/sc/cosmo/bin/cosmocc" AR="/sc/cosmo/bin/cosmoar" ./configure --bindir=/ --program-suffix=.com --enable-static-exe --disable-arch-native
          make
          make DESTDIR=$(pwd)/output install-exec
      - name: Publish APE binary
        uses: softprops/action-gh-release@v1
        with:
          files: |
            output/bzip3.com
